 1195  dos2unix verbose.txt > v2.txt
 1196  dos2unix verbose.txt
 1197  dos2unix -help
 1198  dos2unix verbose.txt 
 1199  dos2unix -f verbose.txt 
 1200  vi verbose.txt 
 1201  exit
 1202  cosignv2.02-8Aug attest --predicate buddy.sbom --verbose  docker.io/sbelgard/buddy@sha256:3123c99d1539bb53113ad6b453c55dcbdc157fbbc6063d966554b4161f82d40c
 1203  exit
 1204  screen -h 100000
 1205  cosignv2.02-8Aug attest --predicate buddy.sbom --verbose  docker.io/sbelgard/buddy@sha256:3123c99d1539bb53113ad6b453c55dcbdc157fbbc6063d966554b4161f82d40c
 1206  cosignv2.02-8Aug attest --predicate buddy.sbom --verbose  docker.io/sbelgard/buddy@sha256:3123c99d1539bb53113ad6b453c55dcbdc157fbbc6063d966554b4161f82d40c | more
 1207  screen
 1208  cd ../znewman/
 1209  ls
 1210  find . -name fulcio.go
 1211  find . -name PublicInstance
 1212  find . -name fulcio.go
 1213  cat ./cmd/cosign/cli/fulcio/fulcio.go
 1214  find . -name fulcioURL
 1215  grep fulcioURL .
 1216  grep fulcioURL /
 1217  *.*
 1218  grep fulcioURL *.*
 1219  grep fulcioURL ./*
 1220  grep fulcioURL ./
 1221  grep -r "fulcioURL" ./
 1222  grep -r "DefaultIDTokenGetter" ./
 1223  grep -r "oauthflow" ./
 1224  ls
 1225  ls -al
 1226  cd ../go
 1227  ls
 1228  go build main.go
 1229  go help modules
 1230  go build main.go
 1231  ./main
 1232  cd ../samples-golang/okta-hosted-login/
 1233  ./main
 1234  go build main.go
 1235  ./main
 1236  cd ../../okta-hosted-login/
 1237  ls
 1238  vi main.go 
 1239  grep 8080 *
 1240  go build main.go
 1241  ./main
 1242  go build main.go
 1243  ./main
 1244  go build main.go
 1245  ./main
 1246  cd ../MyGo/
 1247  go get github.com/gorilla/sessions
 1248  go mod init okta/go-quickstart
 1249  ls
 1250  mkdir templates
 1251  ls
 1252  cd ..
 1253  ls
 1254  cd MyGo/
 1255  ls
 1256  go build main.go
 1257  ./main
 1258  go version
 1259  go get
 1260  vi .env
 1261  ./main
 1262  go run main.go
 1263  history | grep run
 1264  go run main.go
 1265  ls
 1266  ls -l
 1267  go run main.go
 1268  find -name . login
 1269  find -name Login .
 1270  ls
 1271  find . -name 808 *
 1272  find . -name 808 *.*
 1273  find -name 808 *.*
 1274  find 8080 -name .
 1275  find . -name login
 1276  find . -name 808
 1277  vi main.go 
 1278  find . -name 808
 1279  find -name 808
 1280  go build main.go
 1281  ./main
 1282  go build main.go
 1283  ./main
 1284  go run main.go
 1285  cd ../
 1286  cd samples-golang/
 1287  ls
 1288  cd okta-hosted-login/
 1289  ls
 1290  ./mail
 1291  ./main
 1292  go build main.go
 1293  ./main
 1294  cd ../custom-login/
 1295  go build main.go
 1296  go get
 1297  go build main.go
 1298  ./main
 1299  go build main.go
 1300  ./main
 1301  go build main.go
 1302  ./main
 1303  go run main.go
 1304  vi /etc/resolv.conf 
 1305  cd buddy
 1306  ls
 1307  docker images
 1308  docker images | grep buddy
 1309  ps
 1310  ps -ef
 1311  history | grep build
 1312  docker build -t buddy:ssl .
 1313  docker ps
 1314  docker build -t buddy:ssl .
 1315  cd ..
 1316  ls
 1317  cd samples-golang/
 1318  cd identity-engine/embedded-auth-with-sdk/ && go run main.go
 1319  find . ClientID
 1320  find . -name .env
 1321  ls
 1322  find . -name *.env
 1323  cat .env
 1324  ls
 1325  go run main.go
 1326  ls
 1327  go build -o MyGo
 1328  ls
 1329  ./MyGo 
 1330  kubectl
 1331  kubectl
 1332  exit
 1333  $ kubectl get pods --namespace cert-manager -o jsonpath="{.items[*].spec.containers[*].image}"
 1334  $ kubectl get pods 
 1335  kubectl get pods 
 1336  kubectl get nodes
 1337  kubectl get
 1338  kubectl get -h
 1339  kubectl get pod jagger-796b86c9d5-l4tqg -o
 1340  kubectl get -k dir/
 1341  kubectl get pods
 1342  kubectl get deployments
 1343  kubectl get pods --all-namespaces
 1344  kubectl get pods --all-namespaces | grep default
 1345  kubectl get services
 1346  kubectl describe services/jagger
 1347  kubectl get deployments
 1348  kubectl create deployment buddy --image=ghcr.io/sbelgard19/buddy
 1349  kubectl get deployments
 1350  kubectl get pods
 1351  kubectl describe pod
 1352  docker login ghcr.io -u belgard.scott@gmail.com
 1353  CR_PAT=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
 1354  echo $CR_PAT | docker login ghcr.io -u belgard.scott@gmail.com --password-stdin
 1355  vi /etc/resolv.conf 
 1356  echo $CR_PAT | docker login ghcr.io -u belgard.scott@gmail.com --password-stdin
 1357  docker login ghcr.io -u belgard.scott@gmail.com
 1358  echo "$CR_PAT" | docker login ghcr.io -u belgard.scott@gmail.com --password-stdin.
 1359  echo $CR_PAT
 1360  echo "$CR_PAT" | docker login ghcr.io -u belgard.scott@gmail.com --password-stdin
 1361  ping ghcr.io
 1362  docker login cloud.canister.io:5000
 1363  vi /etc/resolv.conf 
 1364  kubectl get pods
 1365  kubectl delete pod buddy
 1366  kubectl delete pod buddy-66d7d7c4d9-jqltt
 1367  kubectl create deployment buddy --image=ghcr.io/sbelgard19/buddy
 1368  kubectl get deployments
 1369  kubectl delete deployment buddy -n=default
 1370  kubectl create deployment buddy --image=ghcr.io/sbelgard19/buddy
 1371  kubectl get deployments
 1372  kubectl get pods
 1373  history | grep deployment
 1374  kubectl get pods
 1375  kubectl describe pod jagger
 1376  kubectl describe pod buddy
 1377  kubectl describe pod jagger
 1378  kubectl describe pod buddy
 1379  kubectl get pods
 1380  kubectl delete deployment buddy -n=default
 1381  kubectl get pods
 1382  kubectl get deployments
 1383  kubectl create deployment buddy --image=ghcr.io/sbelgard19/buddy:ssl
 1384  kubectl get deployments
 1385  kubectl get pods
 1386  kubectl describe pod buddy
 1387  docker images
 1388  docker images | grep buddy
 1389  kubectl delete deployment buddy -n=default
 1390  kubectl get pods
 1391  kubectl create deployment buddy --image=buddy:ssl
 1392  kubectl get pods
 1393  kubectl describe pod buddy
 1394  kubectl get pods
 1395  kubectl get deployment
 1396  kubectl describe services/buddy
 1397  kubectl describe services/buddy:ssl
 1398  kubectl describe services buddy
 1399  kubectl describe services 
 1400  kubectl get deployment
 1401  kubectl get pods
 1402  kubectl describe services buddy
 1403  kubectl describe services jagger
 1404  kubectl describe deployments
 1405  kubectl get namespaces
 1406  kubectl expose deployment buddy --port=443 --target-port=8099 --name=default
 1407  kubectl describe deployments
 1408  kubectl describe deployment buddy
 1409  netstat -rn
 1410  netstat -an
 1411  netstat -an | grep 8088
 1412  netstat -an | grep 8089
 1413  kubectl get deployment
 1414  kubectl get pods
 1415  kubectl delete deployment buddy -n=default
 1416  kubectl get pods
 1417  kubectl create deployment buddy --image=buddy:ssl --port=8443 --target-port=8099 --name=default
 1418  kubectl create deployment buddy --image=buddy:ssl --port=8443 --name=default
 1419  kubectl create deployment buddy --image=buddy:ssl --port=8443 
 1420  netstat -an | grep 844
 1421  netstat -an | grep 8443
 1422  netstat -an | grep listen
 1423  netstat -an | grep Listen
 1424  netstat -an | grep LIS
 1425  netstat -an | grep 8089
 1426  netstat -an | grep :::80
 1427  kubectl get pods
 1428  kubectl delete deployment buddy -n=default
 1429  kubectl get pods
 1430  kubectl create deployment buddy --image=buddy:ssl
 1431  kubectl expose deployment buddy --port=443 --target-port=8099 --name=default
 1432  kubectl expose deployment buddy --port=443 --target-port=8099 
 1433  netstat -an | grep :::8
 1434  kubectl describe pod buddy
 1435  kubectl delete deployment buddy -n=default
 1436  kubectl create deployment buddy --image=buddy:ssl
 1437  kubectl describe pod buddy
 1438  kubectl expose deployment buddy --port=8443 --target-port=8099 
 1439  kubectl get services
 1440  kubectl delete deployment buddy -n=default
 1441  kubectl get services
 1442  kubectl describe pod buddy
 1443  kubectl delete deployment buddy
 1444  kubectl delete services buddy
 1445  kubectl get services
 1446  cd .git
 1447  ls
 1448  vi config 
 1449  cd ..
 1450  git status
 1451  git commit -a -m "10-Oct 12:51"
 1452  git push
 1453  docker build -t buddy:ssl2 .
 1454  docker images
 1455  docker images | grep buddy
 1456  ps -ef
 1457  netstat -an | grep :::8
 1458  kubectl create deployment buddy --image=buddy:ssl2
 1459  ls -al
 1460  grep 8089 | *.*
 1461  vi sig.log
 1462  grep claims | *.*
 1463  grep -l claims *.*
 1464  grep -l 8089 *.*
 1465  kubectl get deploy buddy -o yaml
 1466  kubectl get deploy jagger -o yaml
 1467  docker images
 1468  docker images | grep ssl2
 1469  docker images | grep ssl
 1470  docker tag f635a2c32106 sbelgard/buddy:docker.ssl2
 1471  docker push sbelgard/buddy:docker.ssl2
 1472  kubectl create deployment buddy2 --image=sbelgard/buddy:docker.ssl2
 1473  grep -l 8089 *.*
 1474  netstat -an | grep :::8
 1475  kubectl get pods
 1476  kubectl get deployments
 1477  kubectl config view
 1478  netstat -an | grep :::8
 1479  kubectl describe jagger
 1480  kubectl describe pod jagger
 1481  kubectl create -f foo
 1482  kubectl create -f ./foo
 1483  vi foo
 1484  kubectl create -f ./foo
 1485  kubectl expose service buddy2 --port=443 --target-port=8443 --name=buddy2-https
 1486  kubectl show pods
 1487  kubectl get pods
 1488  kubectl get service
 1489  kubectl get pods
 1490  kubectl delete deploymen
 1491  kubectl get pods
 1492  kubectl get service
 1493  kubectl get deployment
 1494  kubectl del deployment buddy
 1495  kubectl delete deployment buddy
 1496  kubectl get deployment
 1497  kubectl get service
 1498  kubectl create deployment buddy --image=sbelgard/buddy:docker.ssl2 --port=443 --target-port=8999
 1499  kubectl create deployment buddy --image=sbelgard/buddy:docker.ssl2 --port=443 -target-port=8999
 1500  kubectl create deployment buddy --image=sbelgard/buddy:docker.ssl2 --port=443 target-port=8999
 1501  kubectl create deployment buddy --image=sbelgard/buddy:docker.ssl2 port=443 target-port=8999
 1502  kubectl create deployment buddy --image=sbelgard/buddy:docker.ssl2 -target-port=8999
 1503  kubectl create deployment buddy --image=sbelgard/buddy:docker.ssl2 --target-port=8999
 1504  kubectl delete deployment jagger
 1505  kubectl get service
 1506  kubectl delete service jagger
 1507  kubectl get service
 1508  kubectl get deployments
 1509  kubectl get pod
 1510  kubectl create deployment buddy2 --image=sbelgard/buddy:docker.ssl2
 1511  kubectl get pod
 1512  kubectl get deployments
 1513  kubectl get service
 1514  kubectl expose deployment buddy2 --port=443 --target-port=8099
 1515  kubectl get service
 1516  kubectl get deployments
 1517  netstat -an | grep :::
 1518  kubectl get deployments
 1519  kubectl delete deployment buddy2
 1520  kubectl get deployments
 1521  kubectl get pods
 1522  kubectl get service
 1523  kubectl delete service buddy2
 1524  kubectl get service
 1525  kubectl get pod
 1526  kubectl create deployment jagger --image=jagger:1.0
 1527  kubectl get pod
 1528  kubectl get services
 1529  kubectl get deployments
 1530  kubectl expose service jagger --port=80 --target-port=8084
 1531  kubectl get deployments
 1532  kubectl get pods
 1533  kubectl expose service jagger-558944b5db-nzg5q --port=80 --target-port=8084 
 1534  kubectl describe pods jagger
 1535  kubectl delete pods jagger
 1536  kubectl get pods
 1537  kubectl delete pods jaggerjagger-558944b5db-nzg5q
 1538  kubectl delete pods jagger-558944b5db-nzg5q
 1539  kubectl get pods
 1540  kubectl delete pods NAME                      READY   STATUS    RESTARTS   AGE
 1541  jagger-558944b5db-262nw
 1542  kubectl delete pods jagger-558944b5db-262nw
 1543  kubectl get pods
 1544  kubectl del pods jagger-558944b5db-pb85t
 1545  kubectl delete pods jagger-558944b5db-pb85t
 1546  kubectl get pods
 1547  kubectl delete deployment jagger
 1548  kubectl get pods
 1549  kubectl get deployments
 1550  kubectl get services
 1551  kubectl create deployment jagger -image=sbelgard/jagger:docker.hub
 1552  kubectl create deployment jagger --image=sbelgard/jagger:docker.hub
 1553  kubectl get services
 1554  kubectl get deployments
 1555  kubectl get pods
 1556  kubectl get service
 1557  kubectl get pods
 1558  kubectl expose pod jagger-865655b749-dlxht --port=8084
 1559  kubectl get service
 1560  kubectl get pods
 1561  kubectl get deployment
 1562  ping 10.108.28.201
 1563  kubectl describe jagger
 1564  kubectl describe jagger-865655b749-dlxht
 1565  kubectl describe services/jagger
 1566  kubectl get service
 1567  kubectl describe services/jagger-865655b749-dlxht 
 1568  kubectl expose pod jagger-865655b749-dlxht --port=80 --targetport=8084
 1569  kubectl expose pod jagger-865655b749-dlxht --port=80 --target-port=8084
 1570  kubectl delete service jagger-865655b749-dlxht
 1571  kubectl expose pod jagger-865655b749-dlxht --port=80 --target-port=8084
 1572  kubectl describe services/jagger-865655b749-dlxht 
 1573  kubectl get deploy jagger -o yaml 
 1574  kubectl describe pod jagger
 1575  kubectl get pods
 1576  kubectl get deployments
 1577  kubectl delete deployments jagger
 1578  kubectl get pods
 1579  kubectl get services
 1580  kubectl delete services jagger-865655b749-dlxht
 1581  kubectl get services
 1582  docker images | grep jagger
 1583  docker ps
 1584  docker ps | grep jagger
 1585  kubectl create deployment jagger --image=jagger:23Mar
 1586  kubectl get pod
 1587  kubectl get deployment
 1588  kubectl get service
 1589  kubectl describe deployment jagger
 1590  kubectl describe pod jagger-7c97595cdb-wpkwj
 1591  kubectl get service
 1592  kubectl expose pod jagger-7c97595cdb-wpkwj --port=80 --target-port=8443
 1593  kubectl get service
 1594  kubectl describe pod jagger-7c97595cdb-wpkwj
 1595  kubectl expose jagger --port=80 --target-port=8084
 1596  kubectl get service
 1597  kubectl expose jagger-7c97595cdb-wpkwj --port=80 --target-port=8084
 1598  kubectl expose service jagger-7c97595cdb-wpkwj --port=80 --target-port=8084
 1599  kubectl get services
 1600  kubectl delete service jagger-7c97595cdb-wpkwj 
 1601  kubectl get services
 1602  kubectl get pod
 1603  kubectl get deployment
 1604  kubectl delete deployment jagger
 1605  kubectl get deployment
 1606  kubectl get pod
 1607  kubectl get services
 1608  kubectl create deployment jagger --image=jagger:23Mar
 1609  kubectl get pod
 1610  kubectl expose  jagger-7c97595cdb-slkxm --port=80 --target-port=8084
 1611  ubectl expose deployment jagger --port=80 --target-port=8084
 1612  kubectl expose deployment jagger --port=80 --target-port=8084
 1613  kubectl get pod
 1614  kubectl get service
 1615  netstat -an | grep :::
 1616  kubectl get pod
 1617  cd ../kubernetes/
 1618  ls
 1619  kubectl apply -f test.yaml
 1620  cat test.yaml 
 1621  kubectl get services
 1622  vi test.yaml 
 1623  kubectl apply -f test.yaml
 1624  kubectl get deploy jagger -o yaml
 1625  kubectl get deployments
 1626  kubectl delete deployments jagger
 1627  kubectl get service
 1628  kubectl delete service foo
 1629  kubectl delete service jagge
 1630  kubectl get pod
 1631  kubectl create deployment jagger --image=jagger:23Mar
 1632  vi test.yaml 
 1633  kubectl apply -f test.yaml
 1634  kubectl get service
 1635  kubectl dezcribe service jagger
 1636  kubectl describe service jagger
 1637  kubectl expose jagger --port=80 --target-port=8084
 1638  kubectl expose deployment jagger --port=80 --target-port=8084
 1639  kubectl get service
 1640  kubectl delete service jagger
 1641  kubectl delete deployment jagger
 1642  kubectl get pods
 1643  history
 1644  kubectl create deployment jagger --image=jagger:23Mar
 1645  kubectl get deployments
 1646  kubectl get pods
 1647  kubectl expose deployment jagger --port=80 --target-port=8008 --name=jagger
 1648  kubectl run curl --image=radial/busyboxplus:curl -i --tty
 1649  nslookup jagger
 1650  ku
 1651  kubectl get service
 1652  kubectl delete pod curl
 1653  kubectl get service
 1654  kubectl delete service jagger
 1655  kubectl delete deployment jagger
 1656  kubectl get service
 1657  kubectl create deployment jagger --image=jagger:23Mar
 1658  kubectl expose deployment jagger --port=80 --target-port=8084
 1659  history
 1660  kubectl delete deployment jagger
 1661  kubectl delete service jagger
 1662  kubectl create deployment jagger --image=jagger:23Mar
 1663  kubectl expose deployment jagger --port=80 --target-port=8008 --name=jagger
 1664  kubectl get service
 1665  kubectl describe service jagger
 1666  kubectl delete service jagger
 1667  kubectl delete deployment jagger
 1668  kubectl create deployment jagger --image=jagger:23Mar
 1669  kubectl expose deployment/kubernetes-bootcamp --type="NodePort" --port 8087
 1670  kubectl expose deployment/jagger --type="NodePort" --port=80 --target-port=8008 --name=jagger
 1671  kubectl describe service jagger
 1672  kubectl delete deployment jagger
 1673  kubectl delete service jagger
 1674  kubectl create deployment jagger --image=jagger:23Mar
 1675  kubectl expose deployment/jagger --type="NodePort"  --target-port=8008 --name=jagger
 1676  kubectl expose deployment/jagger --type="NodePort" --port=443 --target-port=8008 --name=jagger
 1677  kubectl describe service jagger
 1678  kubectl get nodes -o wide
 1679  kubectl create deployment jagger --image=jagger:23Mar --replicas=3
 1680  kubectl delete service jagger
 1681  kubectl delete deployment jagger
 1682  kubectl create deployment jagger --image=jagger:23Mar --replicas=3
 1683  kubectl get pods
 1684  kubectl get service
 1685  kubectl create deployment jagger --image=jagger:23Mar
 1686  kubectl get deployment
 1687  history
 1688  cat test.yaml 
 1689  kubectl expose deployment/jagger
 1690  kubectl apply -f test.yaml
 1691  vi test.yaml 
 1692  kubectl apply -f test.yaml
 1693  kubectl get deployment
 1694  kubectl get service
 1695  history
 1696  kubectl get service
 1697  kubectl get deploy
 1698  kubectl describe service my-service
 1699  kubectl delete deployment jagger
 1700  kubectl delete service jagger
 1701  kubectl delete service my-service
 1702  vi test.yaml 
 1703  kubectl create deployment jagger --image=jagger:23Mar
 1704  kubectl get pods
 1705  kubectl apply -f test.yaml
 1706  kubectl get service
 1707  kubectl describe servic jaggere
 1708  kubectl describe service jagger
 1709  ping 10.111.16.57
 1710  kubectl describe service jagger
 1711  kubectl get service
 1712  kubectl describe pod jagger
 1713  history | grep expose
 1714  kubectl delete deployment jagger
 1715  kubectl delete service jagger
 1716  kubectl create deployment jagger --image=jagger:23Mar
 1717  kubectl expose deployment/jagger --type="NodePort" --port=443 --target-port=8008 --name=jaggerx
 1718  kubectl delete service jaggerx
 1719  kubectl delete deployment jagger
 1720  kubectl create deployment jagger --image=jagger:23Mar
 1721  kubectl expose deployment/jagger --type="NodePort" --port=80 --target-port=8008 --name=jagger
 1722  kubectl describe service jagger
 1723  history
 1724  kubectl describe deployment jagger
 1725  kubectl describe pod jagger
 1726  get service
 1727  get service jagger
 1728  kubectl describe deployment jagger
 1729  kubectl get service
 1730  kubectl describe deployment jagger
 1731  kubectl describe service jagger
 1732  kubectl get service
 1733  kubectl delete service jagger
 1734  kubectl delete deployment jagger
 1735  kubectl create deployment jagger --image=jagger:23Mar
 1736  kubectl expose deployment/jagger --type="NodePort" --port=80 --target-port=localhost:8008 --name=jagger
 1737  kubectl get service
 1738  kubectl get deployment
 1739  kubectl delete deployment jagger
 1740  kubectl delete service jagger
 1741  kubectl apply deploy.yaml 
 1742  kubectl apply -f deploy.yaml 
 1743  kubectl get pods
 1744  kubectl get service
 1745  cat test.yaml 
 1746  kubectl apply -f deploy.yaml 
 1747  kubectl delete service jagger
 1748  kubectl delete deployment jagger
 1749  kubectl apply -f deploy.yaml 
 1750  kubectl apply -f expose.yaml 
 1751  kubectl get service
 1752  curl 10.98.14.88:80
 1753  kubectl delete deployment jagger
 1754  kubectl delete service jagger
 1755  vi expose.yaml 
 1756  kubectl apply -f deploy.yaml 
 1757  kubectl apply -f expose.yaml 
 1758  kubectl get service
 1759  vi expose.yaml 
 1760  kubectl describe service jagger
 1761  vi deploy.yaml 
 1762  vi expose.yaml 
 1763  kubectl delete service jagger
 1764  kubectl delete deployment jagger
 1765  vi deploy.yaml 
 1766  kubectl apply -f deploy.yaml 
 1767  kubectl apply -f expose.yaml 
 1768  kubectl get pods
 1769  kubectl get service
 1770  kubectl describe service jagger
 1771  vi expose.yaml 
 1772  kubectl delete deployment jagger
 1773  kubectl delete service jagger
 1774  kubectl apply -f deploy.yaml 
 1775  kubectl apply -f expose.yaml 
 1776  vi expose.yaml 
 1777  kubectl apply -f expose.yaml 
 1778  kubectl describe service jagger
 1779  vi expose.yaml 
 1780  kubectl delete service jagger
 1781  kubectl delete deployment jagger
 1782  kubectl apply -f deploy.yaml 
 1783  kubectl apply -f expose.yaml 
 1784  kubectl describe service jagger
 1785  kubectl get service
 1786  curl http://10.103.191.68:8088
 1787  cat deploy.yaml 
 1788  kubectl get deployment
 1789  kubectl get service
 1790  kubectl delete deployment jagger
 1791  kubectl delete service jagger
 1792  kubectl apply -f deploy.yaml 
 1793  kubectl get service
 1794  kubectl get deployment
 1795  kubectl apply -f expose.yaml 
 1796  cat expose.yaml 
 1797  kubectl get deployment
 1798  kubectl get service
 1799  kubectl describe service jagger
 1800  kubectl get pods
 1801  kubectl delete service jagger
 1802  kubectl delete deployment jagger
 1803  vi deploy.yaml 
 1804  vi expose.yaml 
 1805  kubectl apply -f deploy.yaml 
 1806  kubectl apply -f expose.yaml 
 1807  kubectl get pods
 1808  kubectl get service
 1809  kubectl describe service jagger
 1810  vi expose.yaml 
 1811  kubectl delete deployment jagger
 1812  kubectl delete service jagger
 1813  kubectl apply -f deploy.yaml 
 1814  kubectl apply -f expose.yaml 
 1815  kubectl describe service jagger
 1816  kubectl get service
 1817  kubectl get namespaces
 1818  kubectl apply -f namespace.yaml 
 1819  vi namespace.yaml 
 1820  kubectl apply -f namespace.yaml 
 1821  kubectl get namespaces
 1822  kubectl describe namespaces
 1823  kubectl describe namespace scott
 1824  kubectl config view
 1825  kubectl config use-context scott
 1826  kubectl config current-context
 1827  kubectl get jagger
 1828  kubectl get pod jagger
 1829  kubectl get service jagger
 1830  kubectl get service jagger -o yaml
 1831  ping localhost
 1832  netstat -an | grep 808
 1833  kubectl get service jagger -o yaml
 1834  kubectl apply -f deploy.yaml 
 1835  kubectl apply -f expose.yaml 
 1836  kubectl get service
 1837  kubectl get pod
 1838  kubectl delete deployment jagger
 1839  kubectl delete service jagger
 1840  vi expose.yaml 
 1841  kubectl apply -f deploy.yaml 
 1842  kubectl apply -f expose.yaml 
 1843  kubectl get service
 1844  kubectl describe service jagger
 1845  history | grep proxy
 1846  kubectl get pods -l app=jagger -o go-template='{{range .items}}{{.status.podIP}}{{"\n"}}{{end}}'
 1847  kubectl get endpoints jagger
 1848  wget -O- jagger
 1849  kubectl get svc jagger
 1850  nslookup kubernetes.default
 1851  kubectl get service jagger -o json
 1852  kubectl port-forward service/jagger 8099:80
 1853  kubectl port-forward service/jagger 8199:80
 1854  ps -ef
 1855  netstat -an | grep :::
 1856  kubectl delete service jagger
 1857  kubectl delete deployment jagger
 1858  kubectl apply -f deploy.yaml 
 1859  kubectl run jagger --port=8099
 1860  kubectl run jagger --image=jagger --port=8099
 1861  kubectl delete service jagger
 1862  kubectl get service
 1863  kubectl get deployment
 1864  kubectl delete service jagger
 1865  kubectl get deployment
 1866  kubectl delete deployment jagger
 1867  kubectl get pods
 1868  kubectl delele pods jagger
 1869  kubectl delete pods jagger
 1870  kubectl get pods
 1871  kubectl get deployment
 1872  kubectl get service
 1873  history | grep apply
 1874  kubectl apply -f deploy.yaml 
 1875  kubectl get deployment
 1876  kubectl delete deployment jagger
 1877  kubectl run jagger --image=jagger:23Mar --port=8099
 1878  netstat -an | grep :::
 1879  kubectl get service
 1880  kubectl expose deployment jagger --name jagger --type LoadBalancer --port 80 --target-port 8099
 1881  kubectl expose deployment jagger --type LoadBalancer --port 80 --target-port 8099
 1882  kubectl apply -f deploy.yaml 
 1883  kubectl expose deployment jagger --type LoadBalancer --port 80 --target-port 8099
 1884  kubectl get service
 1885  netstat -an | grep :::
 1886  vi deploy.yaml 
 1887  kubectl delete service jagger
 1888  kubectl delete deployment jagger
 1889  kubectl apply -f deploy.yaml 
 1890  vi deploy.yaml 
 1891  kubectl delete deployment jagger
 1892  kubectl apply -f deploy.yaml 
 1893  vi deploy.yaml 
 1894  kubectl apply -f deploy.yaml 
 1895  kubectl apply -f deploy.yaml 2345
 1896  kubectl delete service jagger
 1897  kubectl delete deployment jagger
 1898  kubectl apply -f deploy.yaml
 1899  vi deploy.yaml 
 1900  kubectl apply -f deploy.yaml
 1901  vi deploy.yaml 
 1902  dos2unix deploy.yaml deploy.yaml 
 1903  kubectl apply -f deploy.yaml
 1904  kubectl get service
 1905  kubectl get pods
 1906  kubectl get service
 1907  kubectl delete pod jagger
 1908  kubectl apply -f deploy.yaml
 1909  vi deploy.yaml 
 1910  kubectl apply -f deploy.yaml
 1911  kubectl namespace
 1912  kubectl get namespace
 1913  vi deploy.yaml 
 1914  kubectl apply -f deploy.yaml
 1915  kubectl create deployment jagger --image=jagger:23Mar
 1916  kubectl get deployment -o yaml
 1917  kubectl delete deployment jagger
 1918  kubectl apply -f deploy.yaml
 1919  vi deploy.yaml 
 1920  kubectl apply -f deploy.yaml
 1921  vi deploy.yaml 
 1922  kubectl apply -f deploy.yaml
 1923  kubectl get deployment -o yaml
 1924  kubectl apply -f expose.yaml 
 1925  vi expose.yaml 
 1926  kubectl get service -o yaml
 1927  netstat -an | grep :::
 1928  kubectl get service
 1929  kubectl delete service jagger
 1930  kubectl delete deployment jagger
 1931  kubectl apply -f deploy.yaml 
 1932  kubectl get service
 1933  kubectl get pod
 1934  kubectl get deployment
 1935  kubectl delete deployment jagger-deployment
 1936  kubectl apply -f deploy.yaml 
 1937  kubectl apply -f expose2.yaml 
 1938  kubectl get deployment
 1939  kubectl get service
 1940  vi deploy.yaml 
 1941  vi expose2.yaml 
 1942  kubectl delete deployment jagger-deployment
 1943  kubectl delete service jagger
 1944  kubectl apply -f deploy.yaml 
 1945  kubectl apply -f expose2.yaml 
 1946  kubectl get service
 1947  kubectl delete service jagger
 1948  kubectl delete deployment jagger
 1949  vi expose2.yaml 
 1950  ls
 1951  rm expose.yaml 
 1952  mv expose2.yaml expose.yaml
 1953  kubectl apply -f deploy.yaml 
 1954  kubectl apply -f expose.yaml 
 1955  vi expose.yaml 
 1956  kubectl apply -f expose.yaml 
 1957  vi expose.yaml 
 1958  kubectl delete service jagger
 1959  kubectl delete deployment jagger
 1960  kubectl apply -f deploy.yaml 
 1961  kubectl apply -f expose.yaml 
 1962  kubectl get service
 1963  netstat -an | grep :::
 1964  vi deploy.yaml 
 1965  kubectl create -f FILENAME
 1966  ls
 1967  kubectl create -f test.yaml 
 1968  kubectl delete service jagger
 1969  kubectl delete deployment jagger
 1970  kubectl create -f deploy.yaml 
 1971  netstat -an | grep :::
 1972  kubectl create -f expose.yaml 
 1973  netstat -an | grep :::
 1974  kubectl delete deployment jagger
 1975  kubectl delete service jagger
 1976  kubectl create -f deploy.yaml 
 1977  netstat -an | grep :::
 1978  vi expose.yaml 
 1979  kubectl create -f expose.yaml 
 1980  netstat -an | grep :::
 1981  kubectl get service
 1982  netstat -an | grep :::
 1983  netstat -an | grep LISTEN
 1984  vi deploy.yaml 
 1985  vi expose.yaml 
 1986  kubectl delete service jagger
 1987  kubectl delete deployment jagger
 1988  kubectl apply -f deploy.yaml 
 1989  kubectl apply -f expose.yaml 
 1990  vi expose.yaml 
 1991  kubectl apply -f expose.yaml 
 1992  vi expose.yaml 
 1993  kubectl apply -f expose.yaml 
 1994  get service jagger
 1995  kubectl get service
 1996  ls
 1997  cat Dockerfile 
 1998  ls
 1999  cd ../buddy
 2000  ls
 2001  ls -l
 2002  vi foo
 2003  gitsign version
 2004  git config --list
 2005  cd foo
 2006  mkdir foo
 2007  cd temp
 2008  mkdir trmp
 2009  cd temp
 2010  mv trmp/ temp
 2011  cd temp
 2012  trivy image --format cyclonedx docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a | jq > jagger-cyclone.txt
 2013  ls
 2014  ls -l
 2015  vi jagger-cyclone.txt 
 2016  cay jagger-cyclone.txt | grep ulerabili
 2017  cat jagger-cyclone.txt | grep ulerabili
 2018  cat jagger-cyclone.txt | grep Vuler
 2019  vi jagger-cyclone.txt 
 2020  cat jagger-cyclone.txt | grep vuler
 2021  cat jagger-cyclone.txt
 2022  vi jagger-cyclone.txt 
 2023  cat jagger-cyclone.txt | grep vulner
 2024* 
 2025  vi jagger-cyclone.txt 
 2026  trivy image --format spdx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a  | jq > xtech-spdx.txt
 2027  trivy image --format spdx docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a | jq > jagger-spdx.txt
 2028  trivy image --format cyclonedx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a  | jq > xtech-cyclone.txt
 2029  trivy image --format cyclonedx docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a | jq > jagger-cyclone.txt
 2030  trivy image --format spdx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a  | jq > xtech-spdx.txt
 2031  trivy image --format spdx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a
 2032  trivy image --format spdx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a  > xtech-spdx.txt
 2033  trivy image --format spdx docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a > jagger-spdx.txt
 2034  cat jagger-spdx.txt | grep #####
 2035  cat jagger-spdx.txt | grep Package
 2036  cat jagger-spdx.txt | grep Package:
 2037  cat jagger-cyclone.txt | grep severity
 2038  ##### Package: multiarch-support
 2039  ##### Package: sensible-utils
 2040  ##### Package: libffi6
 2041  ##### Package: findutils
 2042  ##### Package: libtinfo5
 2043  ##### Package: libdebconfclient0
 2044  ##### Package: libfontconfig1
 2045  ##### Package: base-files
 2046  ##### Package: libxslt1.1
 2047  ##### Package: libxau6
 2048  ##### Package: libexpat1
 2049  ##### Package: libc-bin
 2050  ##### Package: libapt-pkg5.0
 2051  ##### Package: libudev1
 2052  ##### Package: hostname
 2053  ##### Package: nginx-core
 2054  ##### Package: coreutils
 2055  ##### Package: ncurses-base
 2056  ##### Package: passwd
 2057  ##### Package: libuuid1
 2058  ##### Package: libnginx-mod-http-xslt-filter
 2059  ##### Package: libelf1
 2060  ##### Package: bash
 2061  ##### Package: libgd3
 2062  ##### Package: libxml2
 2063  ##### Package: libseccomp2
 2064  ##### Package: grep
 2065  ##### Package: fdisk
 2066  ##### Package: debconf
 2067  ##### Package: adduser
 2068  ##### Package: mount
 2069  ##### Package: libgeoip1
 2070  ##### Package: libxcb1
 2071  ##### Package: libicu60
 2072  ##### Package: libxpm4
 2073  ##### Package: libgpg-error0
 2074  ##### Package: e2fsprogs
 2075  ##### Package: libtiff5
 2076  ##### Package: ncurses-bin
 2077  ##### Package: libmount1
 2078  ##### Package: libncursesw5
 2079  ##### Package: libbsd0
 2080  ##### Package: dash
 2081  ##### Package: bsdutils
 2082  ##### Package: libidn2-0
 2083  ##### Package: fontconfig-config
 2084  ##### Package: gpgv
 2085  ##### Package: diffutils
 2086  ##### Package: libfdisk1
 2087  ##### Package: libatm1
 2088  ##### Package: sysvinit-utils
 2089  ##### Package: libnginx-mod-http-image-filter
 2090  ##### Package: libncurses5
 2091  ##### Package: libcom-err2
 2092  ##### Package: libmnl0
 2093  ##### Package: apt
 2094  ##### Package: nginx
 2095  ##### Package: libp11-kit0
 2096  ##### Package: libpam-runtime
 2097  ##### Package: login
 2098  ##### Package: libacl1
 2099  ##### Package: libgcc1
 2100  ##### Package: fonts-dejavu-core
 2101  ##### Package: libc6
 2102  ##### Package: libselinux1
 2103  ##### Package: libpam-modules-bin
 2104  ##### Package: debianutils
 2105  ##### Package: tar
 2106  ##### Package: init-system-helpers
 2107  ##### Package: libjpeg-turbo8
 2108  ##### Package: libext2fs2
 2109  ##### Package: libxtables12
 2110  ##### Package: ubuntu-keyring
 2111  ##### Package: liblz4-1
 2112  ##### Package: nginx-common
 2113  ##### Package: libfreetype6
 2114  ##### Package: libpng16-16
 2115  ##### Package: libattr1
 2116  ##### Package: libcap-ng0
 2117  ##### Package: util-linux
 2118  ##### Package: libpam-modules
 2119  ##### Package: libdb5.3
 2120  ##### Package: gzip
 2121  ##### Package: libss2
 2122  ##### Package: libunistring2
 2123  ##### Package: libjpeg8
 2124  ##### Package: libsystemd0
 2125  ##### Package: libx11-data
 2126  ##### Package: libjbig0
 2127  ##### Package: libpcre3
 2128  ##### Package: libsepol1
 2129  ##### Package: procps
 2130  ##### Package: libgnutls30
 2131  ##### Package: gcc-8-base
 2132  ##### Package: sed
 2133  ##### Package: libaudit1
 2134  ##### Package: libaudit-common
 2135  ##### Package: libtasn1-6
 2136  ##### Package: libhogweed4
 2137  ##### Package: iproute2
 2138  ##### Package: libnginx-mod-mail
 2139  ##### Package: libgcrypt20
 2140  ##### Package: ucf
 2141  ##### Package: libpam0g
 2142  ##### Package: libprocps6
 2143  ##### Package: geoip-database
 2144  ##### Package: zlib1g
 2145  ##### Package: libwebp6
 2146  ##### Package: libstdc++6
 2147  ##### Package: libsemanage-common
 2148  ##### Package: libgmp10
 2149  ##### Package: libbz2-1.0
 2150  ##### Package: libnettle6
 2151  ##### Package: liblzma5
 2152  ##### Package: libnginx-mod-http-geoip
 2153  ##### Package: libzstd1
 2154  ##### Package: dpkg
 2155  ##### Package: bzip2
 2156  ##### Package: base-passwd
 2157  ##### Package: libblkid1
 2158  ##### Package: libsemanage1
 2159  ##### Package: perl-base
 2160  ##### Package: libsmartcols1
 2161  ##### Package: libx11-6
 2162  ##### Package: libnginx-mod-stream
 2163  ##### Package: libssl1.1
 2164  ##### Package: libxdmcp6
 2165  ##### Package: lsb-base
 2166  ##### Package: mawk
 2167  trivy image --format cyclonedx -o jagger.cdx docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a
 2168  vi jagger.cdx 
 2169  cat jagger.cdx | jq
 2170  docker sbom docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a
 2171  docker sbom docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a 
 2172  docker sbom docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a
 2173  trivy image --format spdx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a
 2174  trivy image --format spdx docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a
 2175  trivy image --format spdx docker.io/sbelgard/jagger:docker.hub@sha256:d00509c9b9befff4e941cabb62be2431cecad7d02e57b5eebc31c1e538449c4a | more
 2176  trivy image --format cyclonedx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a  | jq 
 2177  trivy image --format cyclonedx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a | jq > xtech-CycloneDX.sbom
 2178  ls -lt
 2179  rm *
 2180  trivy image --format cyclonedx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a > xtech-CycloneDX.sbom
 2181  trivy image --format spdx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a > xtech-spdx.sbom
 2182  ls
 2183  ls -l
 2184  docker sbom docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a > xtech.sbom
 2185  cat xtech.sbom 
 2186  ls
 2187  rm *
 2188  trivy image --format cyclonedx docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a > xtech-CycloneDX.sbom
 2189  COSIGN_EXPERIMENTAL=1 cosign attest --predicate   xtech-CycloneDX         --oidc-issuer "https://oauth2.sigstore.dev/auth"     --fulcio-url "https://fulcio.sigstore.dev"     --rekor-url "https://rekor.sigstore.dev" docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a > attest-CyclonDX.log
 2190  ls
 2191  rm *.log
 2192  COSIGN_EXPERIMENTAL=1 cosign attest --predicate   xtech-CycloneDX.sbom         --oidc-issuer "https://oauth2.sigstore.dev/auth"     --fulcio-url "https://fulcio.sigstore.dev"     --rekor-url "https://rekor.sigstore.dev" docker.io/sbelgard/xtech:docker.hub@sha256:7da9c442757327f40070ce24f86cdb6f776b4c5752a5182c188bd2f72a0a4f8a > attest-CyclonDX.log
 2193  history | more
 2194  history > 21DecHist.log
